<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="OS1-64">
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="imu_link" value="os1_imu" />
  <xacro:macro name="OS1-64" params="*origin parent:=base_link name:=os1_sensor topic_points:=/os1_cloud_node/points topic_imu:=/os1_cloud_node/imu hz:=10 lasers:=64 samples:=512 min_range:=0.1 max_range:=75.0 noise:=0.008 min_angle:=-${M_PI} max_angle:=${M_PI} lidar_link:=os1_lidar imu_link:=${imu_link} vfov_min:=-.26 vfov_max:=.26">
    <joint name="${name}_mount_joint" type="fixed">
      <xacro:insert_block name="origin" /> 
      <parent link="${parent}"/>
      <child link="${name}"/>
    </joint>

    <link name="${name}">
      <inertial>
         <mass value="0.33"/>
         <origin xyz="0 0 0.0365" rpy="0 0 0" />
         <inertia ixx="0.000241148" ixy="0" ixz="0"
          iyy="0.000241148" iyz="0" izz="0.000264"/>
      </inertial>
      <collision name="base_collision">
         <origin xyz="0 0 0.0365" rpy="0 0 0" />
         <geometry>
 	        <cylinder radius="0.04" length="0.073"/>
         </geometry>
      </collision>
      <visual name="base_visual">
         <origin xyz="0 0 0.0" rpy="0 0 1.5707" />
         <geometry>
	         <mesh filename="package://ouster_description/meshes/os1_64.dae" /> 
           <!-- <cylinder length="0.073" radius="0.04" /> -->
         </geometry>
      </visual>
    </link>


    <link name="${lidar_link}" />


    <joint name="${name}_imu_link_joint" type="fixed">
      <parent link="${name}" />
      <child link="${imu_link}" />
      <origin xyz="0.006253 -0.011775 0.007645" rpy="0 0 0" />
    </joint>
    <link name="${imu_link}" />
    <!-- Below imu is a more sophisticated simulation but there is an issue: the bodyName parameter is not transferred
         correctly to the plugin. If bodyName is equal to any real link in the tree, than bodyName in plugin changes
         it's value to base_footprint. This can be seen in messages published which have
         header.frame_id = base_footprint. Standard imu plugin is used as a workaround.
    -->
    <!-- IMU -->
<!--    <gazebo reference="${imu_link}">-->
<!--      <gravity>true</gravity>-->
<!--      <sensor name="imu_sensor" type="imu">-->
<!--        <always_on>true</always_on>-->
<!--        <update_rate>100</update_rate>  &lt;!&ndash; this is not the publish rate &ndash;&gt;-->
<!--        <visualize>true</visualize>-->
<!--        <topic>__default_topic__</topic>-->
<!--        <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">-->
<!--          <robotNamespace>/</robotNamespace>-->
<!--          <updateRate>100.0</updateRate>-->
<!--          &lt;!&ndash;        <bodyName>${imu_link}</bodyName>&ndash;&gt;-->
<!--          <bodyName>os_imu</bodyName>-->
<!--          <topicName>${topic_imu}</topicName>-->
<!--          <accelDrift>0.005 0.005 0.005</accelDrift>-->
<!--          <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>-->
<!--          <rateDrift>0.005 0.005 0.005 </rateDrift>-->
<!--          <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>-->
<!--          <headingDrift>0.005</headingDrift>-->
<!--          <headingGaussianNoise>0.005</headingGaussianNoise>-->
<!--        </plugin>-->
<!--      </sensor>-->
<!--    </gazebo>-->
    <gazebo reference="${imu_link}">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>  <!-- this is not the publish rate -->
        <visualize>true</visualize>
        <topic>__default_topic__</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>${topic_imu}</topicName>
          <bodyName>${imu_link}</bodyName>
          <updateRateHZ>100.0</updateRateHZ>  <!-- this is the publish rate -->
          <gaussianNoise>0.005</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>${imu_link}</frameName>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>

    <joint name="${name}_lidar_link_joint" type="fixed">
      <parent link="${name}" />
      <child link="${lidar_link}" />
      <origin xyz="0.0 0.0 0.03618" rpy="0 0 0" />
    </joint>

    <!-- Gazebo requires the ouster_gazebo_plugins package -->
    <gazebo reference="${name}">
        <sensor type="ray" name="${name}-OS1-64">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>${hz}</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>${samples}</samples>
                <resolution>1</resolution>
                <min_angle>${min_angle}</min_angle>
                <max_angle>${max_angle}</max_angle>
              </horizontal>
              <vertical>
                <samples>${lasers}</samples>
                <resolution>1</resolution>
                <min_angle>${vfov_min}</min_angle>
                <max_angle>${vfov_max}</max_angle>
              </vertical>
            </scan>
            <range>
              <min>${min_range}</min>
              <max>${max_range}</max>
              <resolution>0.03</resolution>
            </range>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_ouster_laser.so">
            <topicName>${topic_points}</topicName>
            <frameName>${lidar_link}</frameName>
            <min_range>${min_range}</min_range>
            <max_range>${max_range}</max_range>
            <gaussianNoise>${noise}</gaussianNoise>
          </plugin>
        </sensor>
    </gazebo>


  </xacro:macro>
</robot>
